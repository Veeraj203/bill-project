{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUKESH\\\\Desktop\\\\bill-splitter\\\\frontend\\\\src\\\\pages\\\\UploadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadPage() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const upload = async () => {\n    if (!file) return alert(\"Select a bill image\");\n    setLoading(true);\n    const fd = new FormData();\n    fd.append(\"bill\", file);\n    try {\n      const resp = await fetch(\"http://localhost:5000/api/scan\", {\n        method: \"POST\",\n        body: fd\n      });\n      const data = await resp.json();\n      if (data.items) navigate(\"/items\", {\n        state: {\n          items: data.items\n        }\n      });else alert(\"Scan failed\");\n    } catch {\n      alert(\"Error processing the bill\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: 50\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload Your Bill\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: upload,\n      disabled: loading,\n      children: loading ? \"Scanning...\" : \"Upload & Scan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadPage, \"+YfdS6NqWvBgxnMbR056bIenLtY=\", false, function () {\n  return [useNavigate];\n});\n_c = UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","UploadPage","_s","file","setFile","loading","setLoading","navigate","upload","alert","fd","FormData","append","resp","fetch","method","body","data","json","items","state","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","e","target","files","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/MUKESH/Desktop/bill-splitter/frontend/src/pages/UploadPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function UploadPage() {\r\n  const [file, setFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const upload = async () => {\r\n    if (!file) return alert(\"Select a bill image\");\r\n    setLoading(true);\r\n    const fd = new FormData();\r\n    fd.append(\"bill\", file);\r\n\r\n    try {\r\n      const resp = await fetch(\"http://localhost:5000/api/scan\", {\r\n        method: \"POST\",\r\n        body: fd,\r\n      });\r\n      const data = await resp.json();\r\n      if (data.items) navigate(\"/items\", { state: { items: data.items } });\r\n      else alert(\"Scan failed\");\r\n    } catch {\r\n      alert(\"Error processing the bill\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: 50 }}>\r\n      <h1>Upload Your Bill</h1>\r\n      <input type=\"file\" accept=\"image/*\" onChange={(e) => setFile(e.target.files[0])} />\r\n      <br />\r\n      <button onClick={upload} disabled={loading}>\r\n        {loading ? \"Scanning...\" : \"Upload & Scan\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI,CAACL,IAAI,EAAE,OAAOM,KAAK,CAAC,qBAAqB,CAAC;IAC9CH,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMI,EAAE,GAAG,IAAIC,QAAQ,CAAC,CAAC;IACzBD,EAAE,CAACE,MAAM,CAAC,MAAM,EAAET,IAAI,CAAC;IAEvB,IAAI;MACF,MAAMU,IAAI,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QACzDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MACF,MAAMO,IAAI,GAAG,MAAMJ,IAAI,CAACK,IAAI,CAAC,CAAC;MAC9B,IAAID,IAAI,CAACE,KAAK,EAAEZ,QAAQ,CAAC,QAAQ,EAAE;QAAEa,KAAK,EAAE;UAAED,KAAK,EAAEF,IAAI,CAACE;QAAM;MAAE,CAAC,CAAC,CAAC,KAChEV,KAAK,CAAC,aAAa,CAAC;IAC3B,CAAC,CAAC,MAAM;MACNA,KAAK,CAAC,2BAA2B,CAAC;IACpC,CAAC,SAAS;MACRH,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKqB,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAG,CAAE;IAAAC,QAAA,gBACjDxB,OAAA;MAAAwB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzB5B,OAAA;MAAO6B,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAGC,CAAC,IAAK5B,OAAO,CAAC4B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnF5B,OAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN5B,OAAA;MAAQmC,OAAO,EAAE3B,MAAO;MAAC4B,QAAQ,EAAE/B,OAAQ;MAAAmB,QAAA,EACxCnB,OAAO,GAAG,aAAa,GAAG;IAAe;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC1B,EAAA,CApCuBD,UAAU;EAAA,QAGfH,WAAW;AAAA;AAAAuC,EAAA,GAHNpC,UAAU;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}