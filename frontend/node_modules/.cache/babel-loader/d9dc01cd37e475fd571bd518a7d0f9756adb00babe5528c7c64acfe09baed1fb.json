{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUKESH\\\\Desktop\\\\bill-splitter\\\\frontend\\\\src\\\\pages\\\\UploadPage.js\",\n  _s = $RefreshSig$();\n// UploadPage.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPage = ({\n  onUpload\n}) => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const navigate = useNavigate();\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert('Please select a file');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    try {\n      const response = await fetch('http://localhost:5000/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('Received from backend:', data);\n        onUpload(data); // this should update the context or state\n        navigate('/items', {\n          state: {\n            items: data\n          }\n        });\n      } else {\n        console.error('Upload failed:', data);\n        alert(data.error || 'Upload failed');\n      }\n    } catch (error) {\n      console.error('Upload error:', error);\n      alert('Something went wrong during upload');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      marginTop: '80px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '30px',\n        background: '#fff',\n        borderRadius: '10px',\n        boxShadow: '0 2px 8px rgba(0,0,0,0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Your Bill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        style: {\n          marginTop: '20px',\n          padding: '10px 20px',\n          backgroundColor: '#2563eb',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px'\n        },\n        children: \"Upload & Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadPage, \"kui1D9czbfUjqeJpoDpiCu0q18k=\", false, function () {\n  return [useNavigate];\n});\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","UploadPage","onUpload","_s","selectedFile","setSelectedFile","navigate","handleFileChange","event","target","files","handleUpload","alert","formData","FormData","append","response","fetch","method","body","data","json","ok","console","log","state","items","error","style","display","justifyContent","marginTop","children","padding","background","borderRadius","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","backgroundColor","color","border","_c","$RefreshReg$"],"sources":["C:/Users/MUKESH/Desktop/bill-splitter/frontend/src/pages/UploadPage.js"],"sourcesContent":["// UploadPage.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst UploadPage = ({ onUpload }) => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      alert('Please select a file');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', selectedFile);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        console.log('Received from backend:', data);\r\n        onUpload(data); // this should update the context or state\r\n        navigate('/items', { state: { items: data } });\r\n      } else {\r\n        console.error('Upload failed:', data);\r\n        alert(data.error || 'Upload failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Upload error:', error);\r\n      alert('Something went wrong during upload');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', marginTop: '80px' }}>\r\n      <div style={{ padding: '30px', background: '#fff', borderRadius: '10px', boxShadow: '0 2px 8px rgba(0,0,0,0.1)' }}>\r\n        <h2>Upload Your Bill</h2>\r\n        <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n        <button onClick={handleUpload} style={{ marginTop: '20px', padding: '10px 20px', backgroundColor: '#2563eb', color: 'white', border: 'none', borderRadius: '5px' }}>\r\n          Upload & Scan\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}